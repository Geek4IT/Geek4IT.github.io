<HTML>

<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=gb2312">
<TITLE>CeleCmd 2.0 使用说明</TITLE>
<STYLE>
H5
{
	padding: 3px;
	font-size: 13px;
	color: #000099;
	background-color: #EEEEEE;
	border:#E6E6E6 1px solid;
	border-left: 4px solid #669900;
	border-bottom: #DBDBDB 1px solid;
}
B
{
	color: #334466;
}
</STYLE>
</HEAD>

<BODY STYLE="font-size: 12px">

<H4 ALIGN="center"><A NAME="Catalog"></A></A>CeleCmd 2.0 使用说明</H4>
<P ALIGN="center">[<A HREF="#Introduction">简介</A>] [<A HREF="#Feature">特点</A>] [<A HREF="#Installation">安装</A>] [<A HREF="#Usage">使用</A>] [<A HREF="#Menu">菜单</A>] 
[<A HREF="#Command">命令</A>] [<A HREF="#Tips">问答</A>] [<A HREF="#License">许可</A>] [<A HREF="#Donation">致谢</A>]</P>
<H5><A NAME="Introduction"></A>一、简介</H5>
<OL>
	欢迎使用功能强大、灵活方便的 CeleCmd 命令解释引擎。您只要编写简单的 CeleCmd 命令文件，就能在 Windows Mobile 中实现灵活强大的批处理功能。</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Feature"></A>二、特点</H5>
<OL>
	<LI><B>性能高效</B>：命令解释引擎精巧构思，短小精干，运行迅速。<BR>
	　</LI>
	<LI><B>功能强大</B>：内置支持多种命令，使用这些命令可以编写出功能强大的批处理脚本。<BR>
	　</LI>
	<LI><B>扩展支持</B>：支持调用外部 EXE 和 DLL 函数；支持解压缩 RAR 文件。<BR>
	　</LI>
	<LI><B>使用灵活</B>：支持格式统一的命令行参数和命令文件，可以在命令行、命令文件和程序界面中，调用 CeleCmd 的各种功能。<BR>
	　</LI>
	<LI><B>其它功能</B>：支持导入标准的 Windows 注册表导出文件和 Windows Mobile RGU 注册表脚本脚本，支持处理 Windows Mobile XML/PROVXML 配置文件。<BR>
	　</LI>
	<LI><B>方便调试</B>：在程序界面中执行命令或命令文件，可以在日志窗口中跟踪脚本执行的流程和结果，方面发现命令脚本的问题。<BR>
	　</LI>
	<LI><B>广泛支持</B>：一个可执行文件，同时支持 Windows Mobile Smartphone/PocketPC 2003/5.0/6.0。<BR>
	　</LI>
	<LI><B>源码公开</B>：源代码公开，方便更改定制和功能增强，且在源代码中增加扩展命令支持非常容易。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Installation"></A>三、安装</H5>
<OL>
	<LI><B>安装</B>：把 CeleCmd.exe 复制到 Windows Mobile 设备中即可使用。<BR>
	　</LI>
	<LI><B>卸载</B>：CeleCmd 是“绿色”软件，删除 CeleCmd.exe 即可卸载。如果选择了关联 CCS/REG/PROVXML 文件，请先在 CeleCmd 程序中取消文件关联。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Usage"></A>四、使用</H5>
<OL>
	<LI><B>使用方式</B><BR>
	　<UL>
		<LI>直接执行本程序，将显示允许输入命令和现实执行结果的对话框，您可以直接在程序界面上执行各种操作。<BR>
		　</LI>
		<LI>在命令行参数中使用，例如，要创建快捷方式，执行“CeleCmd.exe LINK %M\程序\测试程序.lnk,%W\Test.exe”即可。<BR>
		　</LI>
		<LI>在命令文件中使用，例如，“CeleCmd.exe LOAD \Storage Card\*.CCS”。<BR>
		　</LI>
		<LI>如果省略命令关键字，将把参数作为文件路径（支持通配符）来查找相关文件，并根据扩展名类型执行相应的命令（智能“OPEN”）：“.CCS/.REG/.RGU/.XML/.PROVXML”将执行“LOAD”命令；“.DLL”文件将执行“CDLL”的 DllRegisterServer 命令；“.RAR”文件将被“RARX”解压缩；其它则调用系统的默认打开命令。如果文件路径以“!”开头，则递归查找子目录重的匹配文件。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><B>命令格式</B>　<UL>
		<LI>CeleCmd 的命令是一行字符串，以大写的四字符关键字开始，紧跟着的是空格或制表符，后面是命令的参数。<BR>
		　</LI>
		<LI>参数之间用逗号“,”分隔，如果在参数中要使用逗号本身，则需要使用“%,”的转义字符。<BR>
		　</LI>
		<LI>不同的命令的参数格式不一致，详细请参考 <A HREF="#Command">命令</A>。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><B>变量与宏</B><BR>
	<BR>
	CeleCmd 读取一条个命令文件后，首先展开其中用“%”号前导的宏：<BR>
	　<UL>
		<LI>E&nbsp;&nbsp;&nbsp; 当前脚本的完整路径</LI>
		<LI>C&nbsp;&nbsp;&nbsp; 当前脚本的目录</LI>
		<LI>T&nbsp;&nbsp;&nbsp; 当前时间</LI>
		<LI>D&nbsp;&nbsp;&nbsp; 当前日期</LI>
		<LI>X&nbsp;&nbsp;&nbsp; 最后一条命令的返回值，十六进制格式，如 0XFFFFFFFF</LI>
		<LI>x&nbsp;&nbsp;&nbsp; 最后一条命令的返回值，十进制格式，如 -1 </LI>
		<LI>0-9&nbsp; 用户变量值，用户可以通过 EVAL 命令设置变量 0 到 9 的内容，每个变量能容纳 260 个字符（技巧：其实变量 0 可以容纳 260 * 10 个字符，但第 260 个字符开始与变量 1 重叠，依次类推）</LI>
		<LI>A&nbsp;&nbsp;&nbsp; 可能是 \Application Data </LI>
		<LI>Y&nbsp;&nbsp;&nbsp; 可能是 \My Documents</LI>
		<LI>S&nbsp;&nbsp;&nbsp; 可能是 \Windows\Startup</LI>
		<LI>W&nbsp;&nbsp;&nbsp; 可能是 \Windows</LI>
		<LI>P&nbsp;&nbsp;&nbsp; 可能是 \Windows\“开始”菜单\程序</LI>
		<LI>M&nbsp;&nbsp;&nbsp; 可能是 \Windows\“开始”菜单</LI>
		<LI>V&nbsp;&nbsp;&nbsp; 可能是 \Windows\收藏夹</LI>
		<LI>F&nbsp;&nbsp;&nbsp; 可能是 \Program Files</LI>
		<LI>R&nbsp;&nbsp;&nbsp; 回车字符</LI>
		<LI>N&nbsp;&nbsp;&nbsp; 换行字符</LI>
		<LI>#&nbsp;&nbsp;&nbsp; 十六进制字符，后面紧跟这四个十六进制字符，如“%#FEFF”</LI>
		<LI>%&nbsp;&nbsp;&nbsp; 由于“%”用于宏转义，如果需要在参数中确实需要使用“%”本身，则需要用两个“%”代替，如“%1”要写成“%%1”。</LI>
		<LI>,&nbsp;&nbsp;&nbsp; CeleCmd 把“,”作为参数分隔符，与“%”类似，如果在参数中需要使用“,”本身，则需要使用“%,”的形式。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><B>命令文件</B><BR>
	<BR>
	CeleCmd 的命令文件是由 CeleCmd 命令组成的命令集合。<BR>
	　<UL>
		<LI>每条命令单独一行。</LI>
		<LI>命令文件中可以使用注释，注释必须单独一行，以“;”作为注释行开始。</LI>
		<LI>命令文件支持 UNICODE 格式<FONT COLOR="#FF0000">（已支持带 BOM 的 UTF-8 和 UTF-16）</FONT>和 ASCII 格式，为了更高的执行效率，推荐使用 UNICODE 格式。</LI>
		<LI>命令文件中可以杂合 Windows Registry Script 内容，CeleCmd 会把 Registry Script 导入到注册表。但是使用这种方式必须十分小心，因为执行过程中，Registry Script 部分会被修改（仅在内存中），可能导致 CALL 和 GOTO 无法正常使用（使用原则：最新会被执行到的 
		Registry Script 放在文件最后的子过程中，这样就能避免问题）。</LI>
	</UL>
	</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Menu"></A>五、菜单</H5>
<OL>
	<LI><B>执行</B>：刷新联系人列表。<BR>
	　</LI>
	<LI><B>清除日志</B>：清除日志窗口中的内容。<BR>
	　</LI>
	<LI><B>文件关联</B>：把 .CCS 和 .PROVXML 文件关联到 CeleCmd，以便在资源管理器中可以直接打开 .CCS 和 .PROVXML 文件。<BR>
	　</LI>
	<LI><B>帮助</B>：显示“帮助”窗口，可以查看本帮助信息。<BR>
	　</LI>
	<LI><B>关于</B>：显示程序版本、版权和作者信息。<BR>
	　</LI>
	<LI><B>退出</B>：退出 CeleCmd 程序。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Command"></A>六、命令</H5>
<OL>
	<P ALIGN="center">[<A HREF="#LOAD">LOAD</A>] [<A HREF="#BATC">BATC</A>] [<A HREF="#IFEX">IFEX</A>] [<A HREF="#ELSE">ELSE</A>] [<A HREF="#CALL">CALL</A>] [<A HREF="#GOTO">GOTO</A>] 
	[<A HREF="#PROC">PROC</A>] [<A HREF="#ENDP">ENDP</A>] [<A HREF="#PLAY">PLAY</A>] [<A HREF="#BEEP">BEEP</A>] [<A HREF="#MSGX">MSGX</A>] [<A HREF="#DLGX">DLGX</A>] 
	[<A HREF="#LINK">LINK</A>] [<A HREF="#FILE">FILE</A>] [<A HREF="#REGX">REGX</A>] [<A HREF="#RARX">RARX</A>] [<A HREF="#SEND">SEND</A>] [<A HREF="#WAIT">WAIT</A>] 
	[<A HREF="#KILL">KILL</A>] [<A HREF="#SHUT">SHUT</A>] [<A HREF="#EXEC">EXEC</A>] [<A HREF="#CDLL">CDLL</A>] [<A HREF="#EVAL">EVAL</A>] [<A HREF="#ASOC">ASOC</A>] 
	[<A HREF="#DISP">DISP</A>] [<A HREF="#POST">POST</A>] [<A HREF="#CCUI">CCUI</A>] [<A HREF="#HELP">HELP</A>] </P>
	<LI><A NAME="LOAD"></A><FONT COLOR="#C0C0C0">[</FONT><B>LOAD</B> <FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">文件路径</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：LOAD script file/加载并解释命令脚本文件、注册表脚本文件或者 XML 配置文件。<BR>
		　</LI>
		<LI><B>参数</B>：指定命令文件的路径，支持通配符。<BR>
		　</LI>
		<LI><B>示例</B>：LOAD \*.CCS<BR>
		　</LI>
		<LI><B>备注</B>：</LI><BR>
		<BR>
		<UL>
			<LI><FONT COLOR="#FF000000">注意：此命令不再支持通配符“*”和“?”。如果要支持通配符，请直接使用路径名称（不用任何命令），如“\Storage Card\Cele*.CCS”。</FONT></LI>
			<LI>此命令可以执行 CeleCmd 命令脚本，导入注册表脚本，还可以处理 XML 配置文件。CeleCmd 将会根据文件内容格式（而不是文件扩展名），决定使用什么方式来处理文件。</LI>
			<LI>注册表脚本文件中，最后一行不会被处理，建议最后留一个空行。<BR>
			</LI>
		</UL>
		</LI>
	</UL>
	　</LI>
	<LI><A NAME="BATC"></A><B>BATC</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">命令1</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">;命令2</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">;命令3</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">...</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：BATch Command/一次执行多个命令。<BR>
		　</LI>
		<LI><B>参数</B>：命令列表，用分号分割。<BR>
		　</LI>
		<LI><B>示例</B>：BATC BEEP;MSGX Hello%, World!<BR>
		　</LI>
		<LI><B>备注</B>：由于分号被用作分隔符，用此命令执行的子命令中，将无法使用“;”字符。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="IFEX"></A><B>IFEX</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">!</FONT><FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">条件</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#0000FF">,命令</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：IF condition is true, EXecute command/根据条件是否成立，决定是否执行命令。<BR>
		　</LI>
		<LI><B>参数</B>：指定条件和命令。前导“!”表示条件不成立才执行。如果不存在下列条件判断符，则把条件当作文件路径，判断文件或目录是否存在。<BR>
		<BR>
		<B>=</B>：字符串匹配，忽略大小写<BR>
		<BR>
		<B>!</B>：字符串不匹配，忽略大小写<BR>
		<BR>
		<B>==</B>：数值相等<BR>
		<BR>
		<B>!=</B>：数值不相等<BR>
		<BR>
		<B>&gt;</B>：数值大于<BR>
		<BR>
		<B>&gt;=</B>：数值大于或等于<BR>
		<BR>
		<B>&lt;</B>：数值小于<BR>
		<BR>
		<B>&lt;=</B>：数值小于或等于<BR>
		<BR>
		<B>&amp;</B>：位 AND 运算<BR>
		<BR>
		<B>&amp;&amp;</B>：逻辑 AND 运算<BR>
		<BR>
		<B>|</B>：位 OR 运算<BR>
		<BR>
		<B>||</B>：逻辑 OR 运算<BR>
		　</LI>
		<LI><B>示例</B>：IFEX %x&amp;0x08,BATC BEEP;MSGX Sure!<BR>
		　</LI>
		<LI><B>备注</B>：本命令不修改返回值（即，您可以连续判断“%x”并执行相应的操作）。PROC 中的 IFEX 判断不影响调用者的 ELSE 结果。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="ELSE"></A><B>ELSE</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">命令</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：ELSE condition command/如果最近的 IFEX 条件不成立，则执行命令。<BR>
		　</LI>
		<LI><B>参数</B>：指定命令。<BR>
		　</LI>
		<LI><B>示例</B>：ELSE MSGX Error!<BR>
		　</LI>
		<LI><B>备注</B>：本命令不修改返回值。基于此点，DLGX 后可以连续用此命令判断 %x 的值，而不用担心会被 IFEX 后面的命令修改返回值。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="CALL"></A><B>CALL</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：CALL procedure/调用子程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。该子程序必须位于此命令之后。<BR>
		　</LI>
		<LI><B>示例</B>：CALL _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="GOTO"></A><B>GOTO</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：GOTO procedure/转到子程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。该子程序必须位于此命令之后。<BR>
		　</LI>
		<LI><B>示例</B>：GOTO _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="PROC"></A><B>PROC</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：PROCedure/定义子程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。<BR>
		　</LI>
		<LI><B>示例</B>：PROC _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="ENDP"></A><B>ENDP</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：END of Procedure/子程序结束。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。<BR>
		　</LI>
		<LI><B>示例</B>：ENDP _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="PLAY"></A><B>PLAY</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">!</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">$</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">*</FONT><FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">声音文件路径</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：PLAY sound/播放声音。<BR>
		　</LI>
		<LI><B>参数</B>：指定声音文件路径，仅支持 WAV 格式。<BR>
		　</LI>
		<LI><B>示例</B>：PLAY \Windows\Alarm1.wav<BR>
		　</LI>
		<LI><B>备注</B>：前导“!”表示后台播放；前导“$”表示系统声音别名；前导“*”表示循环播放。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="BEEP"></A><B>BEEP</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">类型</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：BEEP/鸣叫。<BR>
		　</LI>
		<LI><B>参数</B>：指定鸣叫声音类型（数值），具体意义与 Windows Mobile SDK 中 MessageBeep 相同，请查阅相关文档或实际尝试。<BR>
		　</LI>
		<LI><B>示例</B>：BEEP<BR>
		　</LI>
		<LI><B>备注</B>：无。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="MSGX"></A><B>MSGX</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">消息文本</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,标题</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,类型</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：MesSaGe boX/显示消息框。<BR>
		　</LI>
		<LI><B>参数</B>：指定消息文本，消息框标题（默认为本程序的名称），以及消息框类型（默认为 0x40）。<BR>
		　</LI>
		<LI><B>示例</B>：MSGX 禁用 STK 服务将导致一卡双号功能不能使用。%N%N确实要禁止 STK 服务吗?,禁止 STK 服务,0x24<BR>
		　</LI>
		<LI><B>备注</B>：<BR>
		<BR>
		<UL>
			<LI>消息框类型与 Windows Mobile SDK 中 MessageBox 意义相同，为以下两组数值的组合：<BR>
			<BR>
			0x00 OK&nbsp; <BR>
			0x01 OK/CANCEL <BR>
			0x02 ABORT/RETRY/IGNORE <BR>
			0x03 YES/NO/CANCEL <BR>
			0x04 YES/NO <BR>
			0x05 RETRY/CANCEL<BR>
			<BR>
			0x10 ERROR <BR>
			0x20 QUESTION <BR>
			0x30 WARNING <BR>
			0x40 INFORMATION <BR>
			<BR>
			</LI>
			<LI>本命令返回值如下：<BR>
			<BR>
			0x01 OK<BR>
			0x02 CANCEL<BR>
			0x03 ABORT<BR>
			0x04 RETRY<BR>
			0x05 IGNORE<BR>
			0x06 YES<BR>
			0x07 NO</LI>
		</UL>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="DLGX"></A><B>DLGX</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">标题,[#]</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">[选中]</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">{选中}</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">&lt;选中&gt;</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">$</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">文本1</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,[选中]</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">{选中}</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">&lt;选中&gt;</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">$</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">文本2</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">...</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：DiaLoG boX/显示对话框。<BR>
		　</LI>
		<LI><B>参数</B>：指定对话框标题（逗号后“#”表示隐藏“取消”软按键）；定义对话框中的控件文字；初始值表示复选框和单选框的初始状态，最低位为 1 表示第一个对话框控件选中，依此类推。<BR>
		　</LI>
		<LI><B>示例</B>：DLGX 初始设置,#$请选择要执行的操作,$,{1}安装梅花输入法,&lt;0&gt;安装中天 A4 输入法,$,[1]开启 STK 服务,$,$设置字符串:,%0<BR>
		　</LI>
		<LI><B>备注</B>：<BR>
		<BR>
		<UL>
			<LI>前导“[]”表示复选框；前导“&lt;&gt;”表示单选框；前导“{}”表示分组单选框；前导“$”表示提示文字；否则表示编辑框（如果第一项，则会认为是对话框标题）。</LI>
			<LI>如果用户点击确定，将返回所有控件选中状态的组合（即，如果第一个控件被选中，则返回值的最低位为 1，依此类推）。只有复选框和单选框能被选中，但其它控件也计入选中状态组合。</LI>
			<LI>如果用户点击确定，第一个编辑框的结果将保存在 %0 中，第二个编辑框的结果将保存在 %1 中，依此类推。最多支持 32 个控件。</LI>
			<LI>如果用户点击取消，将返回 -1；</LI>
			<LI><FONT COLOR="#FF0000">此命令功能已增强，且已完全支持 Smartphone 按键在控件之间导航，和 PPC 中的上下滚动。</FONT></LI>
			<LI>特别地，前导“@”表示复选框，后面紧跟“|注册表数据”（参考“REGX”格式），在对话框中会自动判断注册表键值并设置复选状态，返回之前会自动设置注册表键值，利用此功能可以写出很强大的注册表设置界面。如:<BR>
				<BR>DLGX 初始设置,@显示 SIM 卡联系人|HKCU\ControlPanel\Phone\#ShowSIM=1?0,@启用 STK 服务|HKLM\Services\STK_Service\#Flag=0?4,$,$(C) Yonsm.NET<BR>
				</LI>
			<BR>
			</LI>
		</UL>
		</LI>
	</UL>
	</LI>
	<LI><A NAME="LINK"></A><B>LINK</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">快捷方式路径</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#0000FF">,目标路径</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,运行参数</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,图标路径</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,图标索引</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：LINK shortcut to target/创建快捷方式。<BR>
		　</LI>
		<LI><B>参数</B>：<BR>
		<BR>
		<B>快捷方式路径</B>：指定要生成的快捷方式的路径，需要“.LNK”扩展名。<BR>
		<BR>
		<B>目标路径</B>：指定快捷方式的目标文件或目录。<BR>
		<BR>
		<B>运行参数</B>：目标程序运行参数。<BR>
		<BR>
		<B>图标路径</B>：快捷方式图标的路径。<BR>
		<BR>
		<B>图标索引</B>：快捷方式图标的在文件资源中的标识。<BR>
		　</LI>
		<LI><B>示例</B>：LINK %S\电话,%W\CProg.exe,,ShellRes.dll,1024<BR>
		　</LI>
		<LI><B>备注</B>：图表索引是该图标在所有图标中的顺序；或者用“-”前导，紧跟着图标的资源标识，如“-100”。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="FILE"></A><B>FILE</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">文件路径</FONT><FONT COLOR="#C0C0C0">&gt;[&lt;</FONT><FONT COLOR="#0000FF">操作符</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">目标</FONT><FONT COLOR="#C0C0C0">]]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：FILE or directory operation/创建、复制、移动、删除文件或目录。<BR>
		　</LI>
		<LI><B>参数</B>：指定源文件路径和目标路径，支持通配符。如果有没有以下操作符存在，则表示删除文件；否则，表示以下操作：<BR>
		<BR>
		<B>-&gt;</B>：移动文件或目录（不支持通配符，推荐使用“=>”复制命令，然后用删除命令）<BR>
		<BR>
		<B>=&gt;</B>：复制文件或目录（如果复制文件夹，文件夹必须用“\”结尾，如“FILE \Temp\XX\=>\Windows\XX\”；如果要递归复制，必须以“!”前导）<BR>
		<BR>
		<B>&lt;-</B>：创建文件，并把目标数据以 ASCII 方式写入到文件中（无法写入空字符，即“%#0000”）<BR>
		<BR>
		<B>&lt;=</B>：创建文件，并把目标数据以 ASCII 方式追加到文件中<BR>
		<BR>
		<B>{-</B>：创建文件，并把目标数据以 UNICODE 方式写入到文件中<BR>
		<BR>
		<B>{=</B>：创建文件，并把目标数据以 UNICODE 方式追加到文件中<BR>
		　</LI>
		<LI><B>示例</B>：FILE !\Temp\*.png=>\My Documents\<BR>
		　</LI>
		<LI><B>备注</B>：此命令的复制功能可以覆盖 ROM 重的文件，如果要使 ROM 文件，可写直接复制到本身，“FILE %W\PlumCh1=>%W\PlumCh1”。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="REGX"></A><B>REGX</B> <FONT COLOR="#C0C0C0">&lt;&lt;</FONT><FONT COLOR="#0000FF">根项</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#0000FF">\子项\</FONT><FONT COLOR="#C0C0C0">&gt;[[</FONT><FONT COLOR="#008000">-</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">@</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">键值</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">=数据</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">?判断</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：REGistry eXecution/读取、设置、删除注册表数据。<BR>
		　</LI>
		<LI><B>参数</B>：<BR>
		<BR>
		<B>注册表脚本路径</B>：导入指定的注册表脚本到系统注册表中，支持通配符，例如“REGX %c\*.REG”。 如果前导“!”表示不显示提示对话框。<BR>
		<BR>
		<B>子项</B>：所选 ROOTKEY 下注册表项的完整名，可以是 HKU、HKCU、HKCR、HKLM 或 HKEY_USERS、HKEY_CURRENT_USER、HKEY_CLASSES_ROOT、HKEY_LOCAL_MACHINE。<BR>
		<BR>
		<B>键值</B>：要操作的键值。如果前导“#”则表示 REG_DWORD 整数类型的数据，如“#0x20”；如果前导“@”则为 REG_BINARY，如“@23 34 90 255”；否则为字符串。<BR>
		<BR>
		<B>数据</B>：要设置的数据。如果没有“=”则表示获取数据：如果是字符串数据，则保存在 %0 中；<FONT COLOR="#FF0000">如果是整数键值，则保存在 %x 中</FONT>。如果前导“-”，且数据中没有“=”则删除值或子项。<BR>
		<BR>
		<B>判断</B>：判断键值是否等于数据（而不是设置数据），“?”后面的内容被此命令忽略（为兼容“DLGX”）。<BR>
		　</LI>
		<LI><B>示例</B>：REGX HKCR\CeleCmd\#Test=%x<BR>
		　</LI>
		<LI><B>备注</B>：此命令描述比较复杂，请耐心理解。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="RARX"></A><B>RARX</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">文件路径</FONT><FONT COLOR="#C0C0C0">&gt;[,目标目录]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：RAR file eXtraction/解压缩 TAR GZip 文件到指定目录。<BR>
		　</LI>
		<LI><B>参数</B>：指定源文件路径和目标路径。如果没有目标目录，将解压缩到根目录。<BR>
		　</LI>
		<LI><B>示例</B>：RARX %C\CeleSetup.rar,%C<BR>
		　</LI>
		<LI><B>备注</B>：此命令必须由 UnRAR.dll 支持。定制 ROM 时可以用此命令来解压缩文件，以避免 InitFlashFiles.dat 中大量的文件拷贝命令，以及 CAB 文件中不支持中文的困扰。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="SEND"></A><B>SEND</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">按键代码1</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">_</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">^</FONT><FONT COLOR="#C0C0C0">]&gt;[</FONT><FONT COLOR="#008000">,按键代码2</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">_</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">^</FONT><FONT COLOR="#C0C0C0">]][...]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：SEND key input/模拟按键。<BR>
		　</LI>
		<LI><B>参数</B>：虚拟按键代码，如 VK_NUMLOCK，请参相关考编程文档。如果按键代码以“_”结束，则仅模拟按键按下；“^”则仅模拟按键弹起；否则模拟按下并弹起。很生动吧：）<BR>
		　</LI>
		<LI><B>示例</B>：SEND 0x12_,0x09_,0x09^,0x12^<BR>
		　</LI>
		<LI><B>备注</B>：上面的示例模拟 Alt+Tab。按键代码支持 16 进制，如“SEND 0x90”表示按下 NumLock 键。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="WAIT"></A><B>WAIT</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">时间</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：WAIT to continue/等待指定时间后再继续执行命令。<BR>
		　</LI>
		<LI><B>参数</B>：指定时间，单位为毫秒。<BR>
		　</LI>
		<LI><B>示例</B>：WAIT 2000<BR>
		　</LI>
		<LI><B>备注</B>：无。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="KILL"></A><B>KILL</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">进程名称</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：KILL process/强制终止指定的进程。<BR>
		　</LI>
		<LI><B>参数</B>：进程名称，即 EXE 文件名（不包含目录）。<BR>
		　</LI>
		<LI><B>示例</B>：KILL CProg<BR>
		　</LI>
		<LI><B>备注</B>：此命令将终止与“进程名称”前部分匹配的所有进程，所以如果省略参数，可能将全部进程关闭。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="SHUT"></A><B>SHUT</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">G</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">P</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">K</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">H</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">S</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">C</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">R</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：SHUT down or reboot device/关闭、重起或硬起设备。<BR>
		　</LI>
		<LI><B>参数</B>：分别表示 GwesPowerOffSystem()/EWX_POWEROFF/keybd_event/HTC_ColdBoot/HTC_Shutdown/SetCleanRebootFlag/KernelIoControl/EWX_REBOOT 方式执行。默认为 EWX_REBOOT，即重新启动。<BR>
		　</LI>
		<LI><B>示例</B>：SHUT<BR>
		　</LI>
		<LI><B>备注</B>：参数“H”表示硬起（H 可后接一个 Kernel IO ID（默认为 H0x1012048），表示硬启命令，但每钟设备的硬启代码不一样：HTC Touch Diamond 为 0x1012048；HTC Prophet 为0x1012594；ASUS P527 为 0x1012004；其它设备需要分析才能得知），将导致所有数据丢失，请谨慎使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="EXEC"></A><B>EXEC</B> <FONT COLOR="#C0C0C0">[!]</FONT><FONT COLOR="#0000FF">&lt;EXE 路径</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,参数</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：EXECute a program/执行 EXE 程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定 EXE 路径和参数。<BR>
		　</LI>
		<LI><B>示例</B>：EXEC \Windows\WCELoad.exe,"\Windows\HTC Black.tsk" /silent /nodelete /safe<BR>
		　</LI>
		<LI><B>备注</B>：前导“!”表示后台执行，不等待执行完成。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="CDLL"></A><B>CDLL</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">DLL 路径</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,函数名称</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数1</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数2</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数3</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数4</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：Call DLL function/调用 DLL 函数。<BR>
		　</LI>
		<LI><B>参数</B>：指定 DLL 路径、函数名称和参数。如果省略函数名称，将调用“DllRegisterServer”。参数默认为 UNICODE 字符串，如果以“#”前导则表示整数；最多支持四个函数参数。<BR>
		　</LI>
		<LI><B>示例</B>CDLL %W\SHELL32.DLL,DllInstall,#1,I<BR>
		　</LI>
		<LI><B>备注</B>：函数必须以 STDCALL 方式导出（不明白什么意思的话，就当没任何问题）。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="EVAL"></A><B>EVAL</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#0000FF">变量名</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">=字符串</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：EVALuate variable/给变量赋值。<BR>
		　</LI>
		<LI><B>参数</B>：指定变量名称（0-9、x、X），以及要赋值的字符串。<BR>
		　</LI>
		<LI><B>示例</B>：EVAL 0=My Variable<BR>
		　</LI>
		<LI><B>备注</B>：　</LI><BR>
		<BR>
		<UL>
			<LI>如果省略变量名称，则清空所有变量。</LI>
			<LI>如果没有等号字符，将返回该变量的数值形式。<BR>
			<BR>
			</LI>
		</UL>
		</LI>
	</UL>
	</LI>
	<LI><A NAME="ASOC"></A><B>ASOC</B> <FONT COLOR="#C0C0C0">[!][</FONT><FONT COLOR="#008000">文件类型</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：ASOC file type/显示帮助信息。<BR>
		　</LI>
		<LI><B>参数</B>：指定要关联的文件类型，如果不指定，表示“CeleCmd”类型。前导“!”表示删除文件关联。<BR>
		　</LI>
		<LI><B>示例</B>：ASOC .reg<BR>
		　</LI>
		<LI><B>备注</B>：可以关联的文件类型有：.ccs/.reg/.provxml/.xml。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="DISP"></A><B>DISP</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">0</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">1</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">2</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">4</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：DISPlay rotation/旋转屏幕。<BR>
		　</LI>
		<LI><B>参数</B>：指定屏幕方向，如果不指定，则切换横屏和竖屏。<BR>
		　</LI>
		<LI><B>示例</B>：DISP 4<BR>
		　</LI>
		<LI><B>备注</B>：可以用这个来旋转屏幕，然后用“EXEC”来加载一些导航软件，并等待执行完成。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="POST"></A><B>POST</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">=</FONT><FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">$</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#0000FF">窗口名称</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#0000FF">窗口类名</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#008000">,消息</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,wParam</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,lParam</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>POST message/给窗口发送消息。<BR>
		　</LI>
		<LI><B>参数</B>：指定窗口名称或类名，以及消息标识和参数。前导“=”表示等待完成，“$”表示给所有窗口发送消息。<BR>
		　</LI>
		<LI><B>示例</B>：POST =$,0x111,1234,0<BR>
		　</LI>
		<LI><B>备注</B>：无。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="CCUI"></A><B>CCUI</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000"> 命令</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：CeleCmd UI/显示 CeleCmd 程序主界面。<BR>
		　</LI>
		<LI><B>参数</B>：填写命令到 CeleCmd 主窗口的编辑框中。<BR>
		　</LI>
		<LI><B>示例</B>：CCUI<BR>
		　</LI>
		<LI><B>备注</B>：<BR>
		<BR>
		<UL>
			<LI>在程序界面中，可以交互式执行命令，还可以查看命令的执行结果。</LI>
			<LI>不带参数执行 CeleCmd，默认将会执行此命令，显示程序主界面。</LI>
			<LI>您也可以修改 CeleCmd.exe 的资源，把您的 CCS 文件脚本（必须是 UNICODE 格式，且最后两个字节必须是 0）导入到&nbsp; CeleCmd RCDATA 资源中，则 CeleCmd 默认将执行您的自定义命令。</LI>
		</UL>
		<P>　</P>
		</LI>
	</UL>
	</LI>
	<LI><A NAME="HELP"></A><B>HELP</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">文字</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：HELP information/显示帮助信息。<BR>
		　</LI>
		<LI><B>参数</B>：在帮助窗口中要显示的 URL（如“http://www.yonsm.net”）、文件（如“\Test.txt”）或文字（支持 HTML）。默认显示 CeleCmd 帮助。<BR>
		　</LI>
		<LI><B>示例</B>：HELP 欢迎使用我定制的 ROM<BR>
		　</LI>
		<LI><B>备注</B>：帮助信息已更新，建议看看。另外关于对话框也重写了，有兴趣也看看：）<BR>
		　</LI>
	</UL>
	</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Tips"></A>七、问答</H5>
<OL>
	<LI><B>在定制 ROM 的时候，怎样使用 CeleCmd 来执行初始化操作？</B><BR>
	<BR>
	可以参考 Sample 中的 CCS 文件，也可以参考 Kavana 或我定制的 ROM OS 中的 CeleCmd 脚本。下面是一般性用法：<BR>
	<BR>
	1). Windows Mobile 硬起后解释 InitFlashFiles.dat：创建系统目录；显示欢迎和屏幕调整界面；加载 CeleCmd.exe。<BR>
	2). CeleCmd 加载根目录下所有子目录下的 *.CCS：假设自动扫描到 \Windows\CeleSetup.CCS。<BR>
	3). CeleSetup.CCS 内的命令：创建基本的快捷方式；解压缩 CeleSetup.rar 压缩包中的文件到相应位置；加载 \Storage\* 和 \Storage Card\*，即扫描 SD 卡上的子目录中所有 .CCS 文件。<BR>
	4). 在 SD 卡中放个 CeleCard.CCS 和 CeleCard.REG，自动把卡上的软件的快捷方式添加到开始菜单-&gt;程序-&gt;工具中，并把相应的设置导入注册表中。
	<BR><BR></LI>

	<LI><B>如何安装 CAB 而没有界面提示？</B>
	<BR><BR>EXEC %W\WCELoad.exe,"\Storage Card\ABC.cab" /silent /nodelete /safe
	<BR><BR></LI>
	
	<LI><B>如何通知系统刷新桌面插件？</B>
	<BR><BR>POST $,0x1A,0xF2
	<BR><BR></LI>

	<LI><B>PPC 中，如何更改今日主题？</B><BR>
	<PRE>
	PROC _更换桌面主题
		FILE %W\stwater.jpg
		REGX HKCU\Software\Microsoft\Today\-UseStartImage
		EXEC %W\WCELoad.exe,"%W\HTC Black.tsk" /silent /nodelete /safe
		REGX HKCU\Software\Microsoft\Today\Skin=%W\HTC Black.tsk
		REGX HKLM\Software\Microsoft\Color\BaseHue=4
		REGX HKLM\Software\Microsoft\Color\-BaseHue
		POST $,0x1A,0xF2
		WAIT 12000
	ENDP _更换桌面主题
	</PRE>
	</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="License"></A>八、许可</H5>
<UL>
	<LI><FONT COLOR="#FF0000">本程序及其源代码是可以免费获取的。<BR>
	　</FONT></LI>
	<LI><FONT COLOR="#FF0000">如果您使用或修改了其中任何的源代码，则必须把使用这些源代码的项目以及项目内的所有源代码和文档公开。否则禁止使用本程序源代码的任何部分。</FONT><BR>
	　</LI>
	<LI><FONT COLOR="#FF0000">您可以复制、分发和传播无限制数量的软件产品，但您必须保证每一份复制、分发和传播都必须是完整和真实的，包括所有有关本软件产品的软件、电子文档，版权和商标宣言。</FONT><BR>
	　</LI>
	<LI><FONT COLOR="#FF0000">作者特此申明对本软件产品之使用不提供任何保证，不对任何用户保证本软件产品的适用性，不保证无故障产生；亦不对任何用户使用此软件所遭遇到的任何理论上的或实际上的损失承担 责任。</FONT><BR>
	　</LI>
	<LI><FONT COLOR="#FF0000">如果您使用本软件，即表示已经默认接受了此协议。</FONT></LI>
</UL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Donation"></A>九、致谢</H5>
<UL>
	<LI>感谢我亲爱滴 Jane，让我在夜深人静的时候还有心情和精力去完善这个程序。<BR>
	<BR>
	</LI>
	<LI>感谢 Kavana 的建议以及热心测试，以及一直以来各种非常聪明的想法和雷同的看法。</LI>
</UL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<P ALIGN="center">Powered by Yonsm<BR>
电子邮件: <A HREF="mailto:Yonsm@msn.com">Yonsm@msn.com</A><BR>
博客网站: <A HREF="http://www.Yonsm.net/mobile">WWW.Yonsm.NET</A><BR>
版权所有 (C) 2007-2009 <A HREF="http://www.yonsm.net/">Yonsm.NET</A>，保留所有权利<BR>
　</P>

</BODY>

</HTML>
